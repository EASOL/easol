# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # using major version aliases
  - 7.0

# optionally specify a list of environments, for example to test different RDBMS
#env:
#  - DB=mysql
#  - DB=pgsql


before_script:
  
  - sudo yes "" | sudo add-apt-repository ppa:ondrej/php
  - sudo yes "" | sudo add-apt-repository ppa:ubuntu-toolchain-r/test 
  - sudo sh -c 'echo "deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/mssql-ubuntu-vivid-preview/ vivid main" > /etc/apt/sources.list.d/mssqlpreview.list'
  - sudo apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893
  - sudo apt-get update

  # Unix ODBC
  - wget http://www.unixodbc.org/unixODBC-2.3.4.tar.gz
  - tar -zxvf unixODBC-2.3.4.tar.gz
  - cd unixODBC-2.3.4
  - ./configure --enable-gui=no --enable-drivers=no --enable-iconv --with-iconv-char-enc=UTF8 --with-iconv-ucode-enc=UTF16LE --libdir=/usr/lib/x86_64-linux-gnu --prefix=/usr --sysconfdir=/etc
  - sudo make install

  #Microsoft
  - cd ../travis
  - sudo tar xvzf msodbcsql-13.0.0.0.tar.gz 
  - cd msodbcsql-13.0.0.0
  - sudo ./install.sh install --accept-license --force
  - cd ..




  # Ubuntu 12.04 issues with libc, gcc, g++
  - sudo yes "" | sudo add-apt-repository ppa:ubuntu-toolchain-r/test
  - sudo apt-get update
  - sudo apt-get install gcc-5 g++-5
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10
  - sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
  - sudo update-alternatives --set cc /usr/bin/gcc
  - sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
  - sudo update-alternatives --set c++ /usr/bin/g++

  # Pear, Pecl, sqlsrv install
  - sudo apt-get install php7.0
  - sudo apt-get install php-pear php7.0-dev
  - pear version
  - pecl version
  - sudo pecl search sqlsr
  - sudo pecl install sqlsrv-4.0.5
  - sudo pecl install pdo_sqlsrv-4.0.5

 
  #And finally, add the extension to php.ini. In Travis, do:
  - echo 'extension = sqlsrv.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  #- echo "extension = sqlsrv.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

  - cd ..
  - mv application/config/database.ci.php application/config/database.php
  - cp tests/functional.suite.template.yml tests/functional.suite.yml
  - sed 's/{{test-key}}/'"$CI_TEST_KEY"'/' -i tests/functional.suite.yml
  - sudo chmod ug+x vendor/codeception/codeception/codecept
  - sudo chmod ug+x vendor/bin/codecept
  - php -S localhost:8000 > /dev/null &
  - vendor/bin/codecept build
  
script:
  - vendor/bin/codecept run functional

after_script:
  -  echo "<?php echo file_get_contents('tests/_output/ReportCept.fail.html');" | php
  -  echo "<?php echo file_get_contents('application/config/database.php');" | php
  - sqlcmd -S $CI_DATABASE_HOSTNAME -d $CI_DATABASE_NAME -U $CI_DATABASE_USERNAME -P $CI_DATABASE_PASSWORD -I

# configure notifications (email, IRC, campfire etc)
#notifications:
#  irc: "irc.freenode.org#travis"
