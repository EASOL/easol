# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # using major version aliases
  - 7.0

# optionally specify a list of environments, for example to test different RDBMS
#env:
#  - DB=mysql
#  - DB=pgsql

  
before_script:

  # On ubuntu 12.04, add this repository to install g++-5
  - sudo yes "" | sudo add-apt-repository ppa:ondrej/php
  - sudo yes "" | sudo add-apt-repository ppa:ubuntu-toolchain-r/test 
  - sudo sh -c 'echo "deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/mssql-ubuntu-vivid-preview/ vivid main" > /etc/apt/sources.list.d/mssqlpreview.list'
  - sudo apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893
  - sudo apt-get update

  - sudo apt-get install gcc-5 g++-5
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10
  - sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
  - sudo update-alternatives --set cc /usr/bin/gcc
  - sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
  - sudo update-alternatives --set c++ /usr/bin/g++

  - sudo apt-get remove libodbc1 unixodbc unixodbc-dev odbcinst1debian2
  - sudo dpkg -i unixodbc_2.3.2-1_amd64.deb


  # Download SQLSRV and PDO_SQLSRV and install
  - sudo apt-get install php7.0-dev
  - sudo wget https://pecl.php.net/get/sqlsrv-4.0.5.tgz
  - sudo wget https://pecl.php.net/get/pdo_sqlsrv-4.0.5.tgz
  - sudo tar xvzf sqlsrv-4.0.5.tgz 
  - cd sqlsrv-4.0.5/ 
  - sudo phpize
  - sudo ./configure 
  - sudo make 
  - sudo make install
  - cd ..
  - sudo tar xvzf pdo_sqlsrv-4.0.5.tgz 
  - cd pdo_sqlsrv-4.0.5/ 
  - sudo phpize
  - sudo ./configure 
  - sudo make 
  - sudo make install

  #And finally, add the extension to php.ini. In Travis, do:
  - echo 'extension = "sqlsrv.so"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

  - cd ..
  - mv application/config/database.ci.php application/config/database.php
  - cp tests/functional.suite.template.yml tests/functional.suite.yml
  - sed 's/{{test-key}}/'"$CI_TEST_KEY"'/' -i tests/functional.suite.yml
  - sudo chmod ug+x vendor/codeception/codeception/codecept
  - sudo chmod ug+x vendor/bin/codecept
  - php -S localhost:8000 > /dev/null &
  - vendor/bin/codecept build
  
script:
  - vendor/bin/codecept run functional


# configure notifications (email, IRC, campfire etc)
#notifications:
#  irc: "irc.freenode.org#travis"